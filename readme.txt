=== Optimize Scripts ===
Contributors: westonruter
Tags: javascript, scripts, caching, minification, compression, obfuscation, concatenation, expires, performance, yslow, page speed, closure compiler
Tested up to: 2.8.6
Requires at least: 2.8
Stable tag: trunk

Concatenates scripts, minifies and optimizes them using Google's Closure Compiler. For other scripts (on CDNs), removes default 'ver' query param.

== Description ==

<em>This plugin is developed at
<a href="http://www.shepherd-interactive.com/" title="Shepherd Interactive specializes in web design and development in Portland, Oregon">Shepherd Interactive</a>
for the benefit of the community.</em>

Concatenates scripts and then minifies and optimizes them using Google's Closure
Compiler (but not if `define('SCRIPT_DEBUG', true)` or `define('CONCATENATE_SCRIPTS', false)`). For non-concatenable
scripts, removes default WordPress '`ver`' query param so that Web-wide
cacheability isn't broken for scripts hosted on ajax.googleapis.com, for
example.

 1. Concatenates enqueued scripts together.
 1. Respects head and footer groups.
 1. Minifies code using Google's Closure Compiler.
 1. Caches the concatenated/minified code and rebuilds it only when one of its source scripts expires or changes.
 1. Filename for concatenated/minified script is the md5 of all the handles concatenated together (thus if an additional handle is provided, a new concatenated script is generated).
 1. Provides a filter to limit which scripts get concatenated (i.e. jQuery on ajax.googleapis.com should be left alone); by default, all scripts on local host are concatenated, and remote scripts are left alone.
 1. Removes the default '`ver`' query parameter which WordPress adds to every script src if no version argument is supplied on `wp_enqueue/register_script`: this is important for Web-wide caching of scripts loaded from ajax.googleapis.com, for example. When registering new scripts, pass the filemtime in as the version so that whenever a file changes, the concatenated script will be regenerated. 

For example, consider the following code:

		wp_deregister_script('jquery');	//remove locally jQuery in favor of Google's
		//since no verion provided, no ver query param will be added to script@src
		wp_enqueue_script('jquery', 'http://ajax.googleapis.com/ajax/libs/jquery/1.3/jquery.min.js');
		wp_enqueue_script(
		   'myscript1', 
		   get_template_directory_uri().'/myscript1.js', 
		   array('jquery'), 
		   filemtime(TEMPLATEPATH).'/myscript1.js',
		   true //in_footer
		);
		…
		wp_enqueue_script(
		   'myscriptN', 
		   get_template_directory_uri().'/myscriptN.js', 
		   array('jquery'), 
		   filemtime(TEMPLATEPATH).'/myscriptN.js',
		   true //in_footer
		);

Without this plugin, the previous code would be generated by WordPress as:

		<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.3/jquery.min.js?ver=2.8.5"></script>
		<script src="http://example.com/wp-content/themes/foo/script1.js?ver=45678901"></script>
		…
		<script src="http://example.com/wp-content/themes/foo/scriptN.js?ver=12345678"></script>

But with this plugin enabled, the output would be as follows:

		<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.3/jquery.min.js"></script>
		<script src="http://example.com/wp-content/js/9e107d9d372bb6826bd81d3542a419d6.js?ver=7659098223"></script>

I'd love to get your [feedback](http://weston.ruter.net/contact/?subject=Optimize+Scripts+WordPress+Plugin) and contributions to make the code
better so that we can boost WordPress frontend performance.

See Trac ticket [3372](http://core.trac.wordpress.org/ticket/3372 "Consolidated JavaScript/CSS Plugin API").

== Changelog ==

= 2009-11-16: 0.5 (alpha) =
* Initial preview release

= 2009-11-16: 0.6 (under development) =
* Admin page to manage optimized scripts and script cache

== Screenshots ==

1. Current Optimized Scripts
2. Registered Script Cache
3. Advanced Options
